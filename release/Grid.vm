function Grid.new 0
push constant 12
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 9
push argument 1
pop this 10
push argument 2
pop this 11
push this 9
push this 11
call Math.divide 2
call CellArray.new 1
pop this 1
push this 9
push this 11
call Math.divide 2
call CellArray.new 1
pop this 2
push this 9
push this 11
call Math.divide 2
call CellArray.new 1
pop this 3
push this 9
push this 11
call Math.divide 2
call CellArray.new 1
pop this 4
push this 9
push this 11
call Math.divide 2
call CellArray.new 1
pop this 5
push this 9
push this 11
call Math.divide 2
call CellArray.new 1
pop this 6
push this 9
push this 11
call Math.divide 2
call CellArray.new 1
pop this 7
push this 9
push this 11
call Math.divide 2
call CellArray.new 1
pop this 8
push pointer 0
call Grid.show 1
pop temp 0
push pointer 0
return
function Grid.getXsize 0
push argument 0
pop pointer 0
push this 9
push this 11
call Math.divide 2
return
function Grid.getYsize 0
push argument 0
pop pointer 0
push this 10
push this 11
call Math.divide 2
return
function Grid.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Grid.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Grid.draw 1
pop temp 0
push constant 0
return
function Grid.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Grid.draw 1
pop temp 0
push constant 0
return
function Grid.at 2
push argument 0
pop pointer 0
push argument 2
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 1
push argument 1
push local 1
add
pop pointer 1
push that 0
pop local 0
push local 0
return
function Grid.draw 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 9
push this 11
call Math.divide 2
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
push local 0
push this 11
call Math.multiply 2
push constant 0
push this 11
push constant 1
sub
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 2
add
push local 0
push this 11
call Math.multiply 2
push constant 32
push this 11
push constant 1
sub
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 3
add
push local 0
push this 11
call Math.multiply 2
push constant 64
push this 11
push constant 1
sub
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 4
add
push local 0
push this 11
call Math.multiply 2
push constant 96
push this 11
push constant 1
sub
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 5
add
push local 0
push this 11
call Math.multiply 2
push constant 128
push this 11
push constant 1
sub
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 6
add
push local 0
push this 11
call Math.multiply 2
push constant 160
push this 11
push constant 1
sub
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 7
add
push local 0
push this 11
call Math.multiply 2
push constant 192
push this 11
push constant 1
sub
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 8
add
push local 0
push this 11
call Math.multiply 2
push constant 224
push this 11
push constant 1
sub
call Cell.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 10
push this 11
call Math.divide 2
call CellArray.new 1
pop this 0
push constant 0
push this 0
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push this 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 0
add
push this 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 0
add
push this 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 0
add
push this 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 0
add
push this 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 0
add
push this 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
